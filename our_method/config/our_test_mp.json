{
    "name": "Ours_v12 for Abdominal",
    "phase": "val", // train or val
    "gpu_ids": [
        0
    ],
    "path": { //set the path
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        "resume_state": "experiments/Ours_v12 for Abdominal_250705_194544/checkpoint/I2221220_E1390"
        // "resume_state": null
        // "resume_state": "experiments/Ours_v12 for Abdominal_250705_194544/checkpoint/I2221220_E1390"
    },
    "datasets": {
        "train": {
            "name": "train",
            "cond_image_sequence":       "image", // "all": use all sequences, "trainA": use sequence A to generate other sequence
            "output_label_sequence":     "label", // the sequence to be generated
            "cond_pesudolabel_sequence": "pesudolabel_20/1", // the sequence to be generated
            "dataroot": "/data/FLARE_Challenge/data/multi-modality-data/processing_dataset/step2_saveSlice/CT_to_MR/train",
            "thres": 0.9,
            "randnum_pl": 20,
            "nclass": 14,
            "batch_size": 12,
            "num_workers": 8,
            "use_shuffle": true,
            "data_len": -1 // -1 represents all data used in train
        },
        "val": {
            "name": "test",
            "cond_image_sequence":       "image", // "all": use all sequences, "trainA": use sequence A to generate other sequence
            "output_label_sequence":     "label", // the sequence to be generated
            "cond_pesudolabel_sequence": "pesudolabel/1", // the sequence to be generated
            "dataroot": "../dataset",
            "thres": 0.9,
            "randnum_pl": 1,
            "nclass": 14,
            "batch_size": 12,
            "num_workers": 0,
            "generation_root": "dataset/results",
            "data_len": -1
        }
    },  // ==============================================================================================
    "model": {
        "diffusion_config":{
            "content_seq_len": 102400,  // 192*192
            "num_classes": 14,
            "diffusion_step": 1000,
            "auxiliary_loss_weight": 2.0e-3,
            "adaptive_auxiliary_loss": false,
            "mask_weight": [1,1], // the loss weight on mask region and non-mask region
            "grid_size": 3,
            "transformer_config":{
                "n_layer": 14,
                "n_embd": 256, // the dim of embedding dims
                "n_head": 16,
                "attn_pdrop": 0.0,
                "resid_pdrop": 0.0,
                "mlp_hidden_times": 4,
                "block_activate": "GELU2",
                "timestep_type": "adalayernorm"    // adainsnorm or adalayernorm and abs
                },
            "embed_opt":{
                "img_size": 320,
                "patch_size": 16,
                "in_chans": 1,
                "initconv_in_chans": 3,  // for image
                "cond_in_chans": 12,  // for image
                "embed_dim": 256,
                "cond_embed_dim": 256,  // for image
                "depth": 10,
                "cond_depth": 10,  // for image
                "num_heads": 16,
                "mlp_ratio": 4.0,
                "out_chans": 256,
                "qkv_bias": true,
                "use_rel_pos": true
            }
        }
    }, // ==============================================================================================
    "train": {
        "n_iter": 1600000,
        "n_epoch": 100000,
        "val_freq": 500, // epoch
        "save_checkpoint_freq": 500, //epoch
        "print_freq": 500, //iter
        "optimizer": {
            "type": "torch.optim.AdamW",
            "lr": 3e-6,
            "betas": [0.9, 0.96],
            "weight_decay": 4.5e-2
        },
        "ema_scheduler": { // not used now
            "step_start_ema": 5000,
            "update_ema_every": 1,
            "ema_decay": 0.9999
        }
    }, // ==============================================================================================
    "wandb": {
        "project": "Ours_v12 for Abdominal"
    } // ==============================================================================================
}
